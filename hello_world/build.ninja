# build.ninja generated by blade
builddir = build64_release

rule stamp
  command = touch ${out}
  description = [1;32mSTAMP ${out}[0m
rule copy
  command = cp -f ${in} ${out}
  description = [1;32mCOPY ${in} ${out}[0m
rule ln
  command = cd `dirname ${in}` && ln -s `basename ${in}` `basename ${out}`
  description = [1;32mLN ${in} ${out}[0m
rule proto
  command = LD_LIBRARY_PATH=cpp3rdlib/protobuf/bin/../lib cpp3rdlib/protobuf/bin/protoc --proto_path=. ${indirect_protoc_incs}  -I=`dirname ${in}` --cpp_out=build64_release ${protocflags} ${protoccpppluginflags} ${in}
  description = [1;32mPROTOC ${in}[0m
rule grpc_proto
  command = LD_LIBRARY_PATH=cpp3rdlib/protobuf/lib:cpp3rdlib/grpc/lib cpp3rdlib/protobuf/bin/protoc --proto_path=. ${indirect_protoc_incs}  -I=`dirname ${in}` --grpc_out=build64_release ${protocflags} ${protoccpppluginflags} --plugin=protoc-gen-grpc=cpp3rdlib/grpc/bin/grpc_cpp_plugin ${in}
  description = [1;32mGRPC_PROTOC ${in}[0m
rule new_proto
  command = LD_LIBRARY_PATH=cpp3rdlib/protobuf/bin/../lib cpp3rdlib/protobuf/bin/protoc --proto_path=. ${indirect_protoc_incs}  -I=`dirname ${source_in}` --cpp_out=. ${protocflags} ${protoccpppluginflags} ${in}
  description = [1;32mNEW_PROTOC ${in}[0m
rule protopython
  command = LD_LIBRARY_PATH=cpp3rdlib/protobuf/bin/../lib cpp3rdlib/protobuf/bin/protoc --proto_path=.  -I=`dirname ${in}` --python_out=build64_release ${protocpythonpluginflags} ${in}
  description = [1;32mPROTOCPYTHON ${in}[0m
rule protodescriptors
  command = LD_LIBRARY_PATH=cpp3rdlib/protobuf/bin/../lib cpp3rdlib/protobuf/bin/protoc --proto_path=.  -I=`dirname ${first}` --descriptor_set_out=${out} --include_imports --include_source_info ${in}
  description = [1;32mPROTODESCRIPTORS ${in}[0m
rule thrift
  command = cpp3rdlib/thrift/bin/thrift --gen cpp:include_prefix -I .  -I `dirname ${in}` -out build64_release/`dirname ${in}` ${in}
  description = [1;32mTHRIFT ${in}[0m
rule fbthrift1
  command = cpp3rdlib/fbthrift/bin/thrift1 --gen cpp:enum_strict,include_prefix -I .  -I `dirname ${in}` -out build64_release/`dirname ${in}` ${in}
  description = [1;32mFBThrift1 ${in}[0m
rule fbthrift2
  command = cpp3rdlib/fbthrift/bin/thrift2 --gen=cpp2:include_prefix=`dirname ${in}`,compatibility -I .  -I `dirname ${in}` -o build64_release/`dirname ${in}` ${in}
  description = [1;32mFBThrift2 ${in}[0m

c_warnings = -Werror-implicit-function-declaration -Wall -Wextra -Wno-unused-function -Wno-unused-local-typedefs -Wno-unused-parameter -Wno-unused-variable -Wno-error=missing-field-initializers -Wno-error=sign-compare -Wno-error=unused-but-set-variable
cxx_warnings = -Wall -Wextra -Wno-unused-function -Wno-unused-local-typedefs -Wno-unused-parameter -Wno-unused-variable -Wno-error=missing-field-initializers -Wno-error=sign-compare -Wno-error=unused-but-set-variable

rule cc
  command = .blade_tools/tools/recc /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-gcc -o ${out} -MMD -MF ${out}.d -c -DHAVE_CONFIG_H -DHAVE_NETINET_IN_H -DHAVE_INTTYPES_H -DLINUX -Wno-implicit-function-declaration -fPIC -m64 -mcx16 -pipe -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ${c_warnings} ${cppflags} -I/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/include/python2.7 -I/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/sysroot/usr/include/python2.7 -I. -Ibuild64_release  ${includes} ${in}
  description = [1;32mCC ${in}[0m
  depfile = ${out}.d
  deps = gcc
rule cxx
  command = .blade_tools/tools/recc /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-g++ -o ${out} -MMD -MF ${out}.d -c -std=c++14 -fPIC -m64 -mcx16 -pipe -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ${cxx_warnings} ${cppflags} -I/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/include/python2.7 -I/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/sysroot/usr/include/python2.7 -I. -Ibuild64_release  ${includes} ${in}
  description = [1;32mCXX ${in}[0m
  depfile = ${out}.d
  deps = gcc

build __securecc_phony__ : phony

rule securecccompile
  command =  .blade_tools/tools/recc /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-g++ -o ${out} -c -fPIC -std=c++14 -m64 -mcx16 -pipe -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ${cxx_warnings} ${cppflags} -I/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/include/python2.7 -I/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/sysroot/usr/include/python2.7 -I. -Ibuild64_release ${includes} ${in}
  description = [1;32mSECURECC ${in}[0m
rule securecc
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain securecc_object ${out} ${in}
  description = [1;32mSECURECC ${in}[0m
  restat = 1
rule ar
  command = rm -f $out; /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-ar rcs $out $in
  description = [1;32mAR ${out}[0m
rule link
  command = /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-g++ -o ${out} -m64 -Wl,--rpath-link=/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/lib64 -L/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/lib64 -Wl,--rpath-link=/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/x86_64-linux-gnu/lib64 -L/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/x86_64-linux-gnu/lib64 ${ldflags} ${objs} -Wl,--start-group ${origin_deps} -Wl,--end-group
  description = [1;32mLINK ${out}[0m
rule solink
  command = /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-g++ -o ${out} -shared -m64 -Wl,--rpath-link=/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/lib64 -L/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/lib64 -Wl,--rpath-link=/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/x86_64-linux-gnu/lib64 -L/opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/usr/x86_64-linux-gnu/lib64 ${ldflags} ${in} ${extra_ldflags}
  description = [1;32mSHAREDLINK ${out}[0m
rule swigpython
  command = mkdir -p ${swigtargetpath} && swig -python -threads ${swigpythonflags} ${swigpythonincs} -c++ -Ibuild64_release -o `var="${out}" && echo $${var%\ *}` ${in}
  description = [1;32mSWIGPYTHON ${in}[0m
rule resource_index
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain resource_index ${name} ${path} ${out} ${in}
  description = [1;32mRESOURCE INDEX ${out}[0m
rule resource
  command = xxd -i ${in} | sed -e "s/^unsigned char /const char RESOURCE_/g" -e "s/^unsigned int /const unsigned int RESOURCE_/g" > ${out}
  description = [1;32mRESOURCE ${in}[0m

pythonbasedir = __pythonbasedir__

rule pythonlibrary
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain python_library ${pythonbasedir} ${out} ${in}
  description = [1;32mPYTHON LIBRARY ${out}[0m
rule pythonbinary
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain python_binary ${pythonbasedir} ${mainentry} ${out} ${in}
  description = [1;32mPYTHON BINARY ${out}[0m
rule shelltest
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain shell_test ${out} ${in}
  description = [1;32mSHELL TEST ${out}[0m
rule shelltestdata
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain shell_testdata ${out} ${in} ${testdata}
  description = [1;32mSHELL TEST DATA ${out}[0m
rule lex
  command = flex ${lexflags} -o ${out} ${in}
  description = [1;32mLEX ${in}[0m
rule yacc
  command = bison ${yaccflags} -o ${out} ${in}
  description = [1;32mYACC ${in}[0m
rule scm
  command = PYTHONPATH=/data00/tiger/typhoon-blade/src/blade:$$PYTHONPATH python -m toolchain scm ${out} ${git_info_array} ${main_info} ${profile} "${compiler}" ${git_info_len}
  description = [1;32mSCM ${out}[0m

build build64_release/version.cpp.o: cxx build64_release/version.cpp
  cppflags = -w -O2
  cxx_warnings =

rule nvcc_binary
  command = nvcc  -o ${out}
  description = [1;32mNvccBinary ${in}[0m
rule nvcc_object
  command = nvcc -ccbin /opt/tiger/typhoon-blade/gccs/x86_64-x86_64-gcc-494/bin/x86_64-linux-gnu-g++  ${includes} ${extra_flags} -o ${out} -c ${in}
  description = [1;32mNvccObject ${in}[0m
rule drpc
  command = timeout 240 data-arch/drpc_gen/code_gen.py --idl_gen_path=`dirname ${in}` --workspace=build64_release/`dirname ${in}`/gen-drpc --out_dir=build64_release/`dirname ${in}`/gen-drpc --mode=0 --thrift_file=${in}
  description = [1;32mDRPC ${in}[0m
rule archon
  command = timeout 240 data-arch/archon-gen/code_gen.py --idl_gen_path=`dirname ${in}` --workspace=build64_release/`dirname ${in}`/ --out_dir=build64_release/`dirname ${in}`/ --thrift_file=${in} 
  description = [1;32mARCHON ${in}[0m
rule new_archon
  command = timeout 240 data-arch/archon-gen/code_gen.py --idl_gen_path=`dirname ${in}` --workspace=`dirname ${in}`/ --out_dir=`dirname ${in}`/ --thrift_file=${in} 
  description = [1;32mNEW_ARCHON ${in}[0m
rule flatc
  command = LD_LIBRARY_PATH=cpp3rdlib/flatbuffers/lib cpp3rdlib/flatbuffers/bin/flatc -o build64_release/`dirname ${in}` -c ${in}
  description = [1;32mFLATC ${in}[0m

build build64_release/hello_world/test_push_back.objs/test_push_back.cpp.o: cxx hello_world/test_push_back.cpp
  cppflags = -O2 -fno-omit-frame-pointer
build build64_release/hello_world/test_push_back: link build64_release/version.cpp.o build64_release/hello_world/test_push_back.objs/test_push_back.cpp.o || build64_release/version.cpp.o
  objs = build64_release/version.cpp.o build64_release/hello_world/test_push_back.objs/test_push_back.cpp.o
  extra_ldflags = -lpthread
  origin_deps = -lpthread
  ldflags = -Wl,-dynamic-linker,.bundle/ld-linux-x86-64.so.2 -Wl,-rpath=.bundle -Wl,--enable-new-dtags
